name: TeamCity Tests

on: push

jobs:
  run_teamcity_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: Install ifconfig
        run: sudo apt-get update && sudo apt-get install -y net-tools

      - name: Set up host environment variables
        run: |
          echo "HOST=$(ifconfig | grep -E '([0-9]{1,3}\.){3}[0-9]{1,3}' | grep -v 127.0.0.1 | awk '{ print $2 }' | head -n 1)" >> $GITHUB_ENV

      - name: Setup host config.properties
        run: |
          echo "host=${{ env.HOST }}:8111" > src/main/resources/config.properties
          echo "remote=http://${{ env.HOST }}:4444/wd/hub" >> src/main/resources/config.properties
          echo "browser=chrome" >> src/main/resources/config.properties

      - name: Create Selenoid Config Directory
        run: mkdir -p config

      - name: Copy Browsers Config
        run: cp infra/browsers.json config/

      - name: Pull Selenoid Chrome/Firefox/Opera
        run: docker pull selenoid/vnc:chrome_91.0

      - name: Run Selenoid
        run: |
          docker run -d --name selenoid \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $(pwd)/config/:/etc/selenoid/:ro \
          -p 4444:4444 \
          aerokube/selenoid:latest-release

      - name: Run TeamCity server
        run: |
          docker run -u 0 -d --name teamcity-server \
          -v $(pwd)/tmp/teamcity_server/datadir:/data/teamcity_server/datadir \
          -v $(pwd)/tmp/teamcity_server/logs:/opt/teamcity/logs \
          -p 8111:8111 \
          jetbrains/teamcity-server:2023.11.1

      - name: Check TeamCity server status
        run: |
          retries=30
          while [[ $retries -gt 0 ]]; do
            if curl -s http://${{ env.HOST }}:8111/ | grep -q "TeamCity"; then
              echo "TeamCity server is up"
              break
            fi
            echo "Waiting for TeamCity server to be up..."
            sleep 10
            retries=$((retries - 1))
          done
          if [[ $retries -eq 0 ]]; then
            echo "TeamCity server did not start in time" >&2
            exit 1
          fi

      - name: Run TeamCity setup test
        run: mvn clean test -Dtest=TeamCitySetupTest#startUpTest
        working-directory: ${{ github.workspace }}

      - name: Extract Super User Token from Docker logs
        run: |
          echo "Checking TeamCity logs for Super User Token..."
          token=$(docker logs teamcity-server 2>&1 | grep -o 'Super user authentication token: [0-9]*' | grep -o '[0-9]*')
          echo "Extracted Token: $token"
          if [ -z "$token" ]; then
            echo "Super User Token not found in logs" >&2
            exit 1
          else
            echo "SUPER_USER_TOKEN=${token}" >> $GITHUB_ENV
          fi

      - name: Set up superUserToken config property
        run: echo "superUserToken=${{ env.SUPER_USER_TOKEN }}" >> src/main/resources/config.properties

      - name: Run TeamCity agent
        run: |
          docker run -e SERVER_URL=http://$HOST:8111 -u 0 -d --name teamcity-agent \
          -v $(pwd)/tmp/teamcity_agent/conf:/data/teamcity_agent/conf \
          jetbrains/teamcity-agent:2023.11.1

      - name: Set permissions
        run: mvn clean test -Dtest=SetupTest#setAuthSettings
        working-directory: ${{ github.workspace }}

      - name: Run API test suite
        run: mvn test -Dgroups=Api
        working-directory: ${{ github.workspace }}

      - name: Run UI test suite
        run: mvn test -Dgroups=UI
        working-directory: ${{ github.workspace }}

